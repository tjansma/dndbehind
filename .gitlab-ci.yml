# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.11-slim

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
cache:
  paths:
    - .cache/pip

# before_script:
#   - python --version ; pip --version  # For debugging

stages:
  - test
  - build
  # - deploy

test:
  stage: test
  variables:
    FLASK_ENV: "testing"
    DATABASE_URL: "sqlite:///:memory:"  # In-memory SQLite database for tests
  script:
    - pip install pytest pytest-cov pytest-flask flask-testing
    - pip install -e ".[test]"
    - pytest --cov=dndbehind --cov-report=xml:coverage.xml tests/
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

build:
  image: docker:20.10.16
  stage: build
  services:
    - name: docker:20.10.16-dind
      alias: docker
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

# deploy:
#   stage: deploy
#   needs:
#     - build
#   variables:
#     FLASK_ENV: "testing"
#     DATABASE_URL: "sqlite:///dndbehind.db"  # Use a persistent SQLite database for production
#   services:
#     - name: dndbehind:latest
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#     - when: manual
