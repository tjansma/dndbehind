"Title","Description"
"FR01: User Registration","The system shall allow new users to register with a unique username, unique email, and password."
"FR02: Password Hashing","The system shall securely hash user passwords using Argon2."
"FR03: User Login","The system shall allow registered users to log in using their username and password."
"FR04: JWT Generation","Upon successful login, the system shall generate a JSON Web Token (JWT) containing user ID and roles."
"FR05: Return JWT","The system shall return the JWT to the authenticated user."
"FR06: JWT Requirement","The system shall require a valid JWT for accessing protected endpoints."
"FR07: Frontend JWT Storage","The frontend shall store the received JWT securely (e.g., in an `HttpOnly` cookie managed by the frontend server)."
"FR08: Frontend JWT Sending","The frontend shall send the JWT with subsequent requests to the backend API."
"FR09: Backend JWT Validation","The backend API shall validate the JWT signature and expiration on protected requests."
"FR10: WhoAmI Endpoint","The system shall provide an endpoint to retrieve the current logged-in user's information based on their JWT."
"FR11: Implement RBAC","The system shall implement Role-Based Access Control (RBAC) using roles: 'Player', 'Administrator', 'Maintainer', 'Operator'."
"FR12: Admin List Users/Roles","The system shall allow Administrators to list all users and their roles."
"FR13: Admin Assign Roles","The system shall allow Administrators to assign roles to users."
"FR14: Admin Remove Roles","The system shall allow Administrators to remove roles from users."
"FR15: Resource Access Control","The system shall restrict access to resources based on assigned roles and resource ownership."
"FR16: Track Last Login","The backend shall track the last login time for users."
"FR17: Handle Disabled Accounts","The system shall handle disabled user accounts during login."
"FR20: Character Model Fields","The Character model shall include fields for: name, level, alignment, age, height, weight, eye color, hair color, player (owner ID), race, class(es), background."
"FR21: Store Ability Scores","The Character model shall store 6 base ability scores: Strength, Dexterity, Constitution, Intelligence, Wisdom, Charisma."
"FR22: Store Proficiencies","The system shall store proficiency selections for skills, saving throws, weapons, armor, and tools based on race, class, and background choices."
"FR23: Store HP","The Character model shall store current Hit Points (HP) and maximum HP."
"FR24: Store Temp HP","The Character model shall store temporary Hit Points."
"FR25: Store Hit Dice","The Character model shall store Hit Dice (total and remaining by type)."
"FR26: Store Languages","The system shall store known languages based on race and background."
"FR27: Store Character Speed","The system shall store character speed based on race."
"FR28: Store Special Senses","The system shall store special senses (e.g., Darkvision) based on race."
"FR29: Store Class Features","The system shall represent and store class-specific features gained at each level according to SRD rules (e.g., Rage uses for Barbarian, Spell Slots for Wizard)."
"FR30: Implement SRD Races","The system shall implement data models and logic for SRD Races (Dwarf, Elf, Halfling, Human, Dragonborn, Gnome, Half-Elf, Half-Orc, Tiefling), including their traits, ability score modifiers, speed, senses, and languages."
"FR31: Implement SRD Classes","The system shall implement data models and logic for SRD Classes (Barbarian, Bard, Cleric, Druid, Fighter, Monk, Paladin, Ranger, Rogue, Sorcerer, Warlock, Wizard), including their hit dice, proficiencies (saving throws, skills, armor, weapons, tools), starting equipment options, and features gained at levels 1-20 according to the SRD."
"FR32: Implement SRD Backgrounds Model","The system shall implement data models for SRD Backgrounds, including skill proficiencies, tool proficiencies, languages, starting equipment/gold, and features."
"FR33: Implement SRD Skills","The system shall implement the list of SRD Skills and associate them with their corresponding ability scores (e.g., Athletics -> Strength)."
"FR34: Implement SRD Equipment","The system shall implement SRD Equipment items (Adventuring Gear, Armor, Weapons, Tools), including their cost, weight, and relevant properties (AC for armor, damage/type for weapons)."
"FR35: Implement SRD Equip Packs","The system shall implement SRD starting Equipment Packs (Burglar's, Diplomat's, Dungeoneer's, etc.)."
"FR40: Character Creation Steps Guide","The system shall guide the Player through the character creation steps: Ability Scores, Race selection, Class selection, Background selection, Skill/Proficiency selection, Equipment selection, Descriptive details."
"FR41: Support Ability Score Methods","The system shall support standard methods for ability score generation (e.g., Standard Array, Point Buy)."
"FR42: Apply Racial Modifiers","The system shall apply racial ability score modifiers correctly."
"FR43: Allow Proficiency Selection","The system shall allow selection of skill/tool proficiencies granted by Race, Class, and Background from valid options."
"FR44: Provide Starting Equip Options","The system shall provide options for starting equipment (class/background packs or starting gold based on class)."
"FR45: Player Create Character","The system shall allow authenticated Players to create new characters, saving all selected and calculated data. *(Backend model exists, endpoint needed)*"
"FR46: Player View Character List","The system shall allow a Player to view a list of characters they own."
"FR47: Retrieve Character Details","The system shall allow a Player or an Operator to retrieve the full details of a specific character."
"FR48: Player Update Character","The system shall allow a Player to update the details (name, stats, level, description etc.) of a character they own."
"FR49: Player Delete Character","The system shall allow a Player to delete a character they own."
"FR50: Implement Leveling Up","The system shall implement character leveling up, including increasing max HP (rolling hit dice or taking average), gaining new class features, and tracking proficiency bonus increases."
"FR51: Enforce SRD Rules/Prereqs","The system shall enforce SRD rules and prerequisites during character creation and leveling (e.g., multiclassing prerequisites)."
"FR60: Calculate Ability Modifiers","The system shall calculate ability score modifiers based on ability scores."
"FR61: Calculate Skill Bonuses","The system shall calculate skill bonuses (Ability Modifier + Proficiency Bonus if proficient)."
"FR62: Calculate Saving Throws","The system shall calculate saving throw bonuses (Ability Modifier + Proficiency Bonus if proficient)."
"FR63: Calculate Passive Perception","The system shall calculate Passive Perception (10 + Perception skill bonus)."
"FR64: Calculate Armor Class (AC)","The system shall calculate Armor Class (AC) based on equipped armor, shields, Dexterity modifier, and other applicable features (e.g., Unarmored Defense)."
"FR65: Calculate Initiative","The system shall calculate Initiative bonus (Dexterity modifier)."
"FR66: Calculate Attack/Damage Bonus","The system shall calculate attack and damage bonuses for equipped weapons based on relevant ability scores (Strength or Dexterity) and proficiency bonus."
"FR67: Calculate Carrying Capacity","The system shall calculate character carrying capacity based on Strength score (Strength score x 15 pounds per SRD)."
"FR68: Calculate Inventory Weight","The system shall calculate the total weight of the character's inventory."
"FR69: Indicate Encumbrance","The system shall indicate if a character is encumbered based on inventory weight vs. carrying capacity (optional SRD variant rule, consider if implementing)."
"FR70: Player View Inventory","The system shall allow Players to view their character's inventory, categorized (e.g., Weapons, Armor, Gear)."
"FR71: Player Add/Remove Items","The system shall allow Players to add/remove items from the SRD equipment list to/from their inventory."
"FR72: Player Manage Item Quantities","The system shall allow Players to manage quantities for stackable items."
"FR73: Player Equip/Unequip Items","The system shall allow Players to equip/unequip armor, shields, and weapons."
"FR74: Track Character Currency","The system shall track currency (CP, SP, EP, GP, PP) for each character."
"FR75: Deduct Currency on Purchase","The system shall deduct currency when items are ""purchased"" (if implementing starting wealth or shopping)."
"FR76: Enforce Inventory Limits","The system shall enforce inventory limits based on carrying capacity/encumbrance rules if implemented."
"FR80: Maintainer Create Background","The system shall allow Maintainers to create new character Backgrounds with a unique name and description."
"FR81: Maintainer List Backgrounds","The system shall allow Maintainers to list all available Backgrounds."
"FR82: Maintainer Update Background","The system shall allow Maintainers to update existing Backgrounds."
"FR83: Maintainer Delete Background","The system shall allow Maintainers to delete existing Backgrounds."
"FR84: Player View/Select Background","Players shall be able to view and select from the list of available SRD Backgrounds."
"FR85: Provide SRD Data Read Access","The system shall provide read access (potentially managed by Maintainers) to SRD Race, Class, Skill, and Equipment data used by the application logic."
"FR90: htmx Partial Page Updates","User interactions on the character sheet (e.g., editing a stat, equipping an item) shall trigger partial page updates using `htmx`."
"FR91: htmx Inline Validation","Forms submitted via `htmx` shall provide validation feedback inline or near the relevant fields without a full page reload."
"FR92: htmx Dependent Field Updates","Changes to core character data (e.g., ability score, level, equipped items) shall trigger `htmx` updates to all dependent calculated fields (e.g., modifiers, skills, AC, attack bonuses, carrying capacity) displayed on the sheet."
"FR93: htmx Loading Indicators","The frontend shall provide visual indicators during `htmx` requests."
